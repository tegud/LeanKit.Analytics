@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Layouts/_Layout.cshtml";
}
@model LeanKit.ReleaseManager.Controllers.GraphViewModel

<h2>Product Owner Dashboard</h2>

<ul class="view-options">
    <li class="view-option summary"><a href="/ProductOwnerDashboard/">Completed</a></li>
    <li class="view-option forecast"><a href="/ProductOwnerDashboard/Forecast">Forecast</a></li>
    <li class="view-option graphs selected">Graphs</li>
</ul>

<div id="thegraph">
</div>

@section Javascript
{
    <script src="~/Assets/js/lib/d3.min.js" type="text/javascript"></script>
    <script src="~/Assets/js/d3.box.js" type="text/javascript"></script>
    <script src="~/Assets/js/lib/TLRGRP.core.js"></script>
    <script src="~/Assets/js/charts/TLRGRP.dashboards.graphs.renderers.js"></script>
    <script src="~/Assets/js/charts/TLRGRP.dashboards.Builder.js"></script>
    <script src="~/Assets/js/charts/TLRGRP.dashboards.graphs.ChartCanvas.js"></script>
    <script src="~/Assets/js/charts/TLRGRP.dashboards.graphs.ChartDimensions.js"></script>
    <script src="~/Assets/js/charts/TLRGRP.dashboards.graphs.DashboardChart.js"></script>
    <script src="~/Assets/js/charts/TLRGRP.dashboards.graphs.DashboardChartStore.js"></script>
    <script src="~/Assets/js/charts/TLRGRP.dashboards.graphs.Legend.js"></script>

    <script type="text/javascript">
        (function() {
            var renderLineChart = function() {
                var options = {
                    dimensions: {
                        width: 840,
                        height: 690,
                        margin: { top: 20, right: 30, bottom: 40, left: 50 }
                    },
                    axisExtents: {
                        y: [0]
                    },
                    elementSelector: '#thegraph',
                    series: [{
                        id: 'Tickets',
                        title: 'Tickets',
                        color: 'green'
                    }, {
                        id: 'Releases',
                        title: 'Releases',
                        color: 'red'
                    }, {
                        id: 'Complexity',
                        title: 'Complexity',
                        color: 'blue'
                    }]
                },
                chart = new TLRGRP.dashboards.graphs.DashboardChart(options);
	                
                chart.drawChart(@Html.Raw(Model.GraphData));
            };
	
            var graphs = {
                cycleTime: {
                    line: renderLineChart
                }
            },
	            currentGraph,
	            showGraph = function (type, view) {
	                var graphKey = type + view;
	                    
	                if (currentGraph === graphKey) {
	                    return;
	                }
	                    
	                $('#thegraph').html('');
	                    
	                currentGraph = graphKey;
	                graphs[type][view]();
	            };
            showGraph('cycleTime', 'line');

        })();
    </script>
}