@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Layouts/_Layout.cshtml";
}

<h2>Live Status</h2>

<ul id="metrics-list">
    <li class="stop-start" id="stop-start"></li>
    <li class="time-select">
        <select id="query-time-select">
            <option data-time-limit="step=6e4&limit=15">Last 15mins</option>
            <option data-time-limit="step=6e4&limit=30">Last 30mins</option>
            <option data-time-limit="step=6e4&limit=60">Last Hour</option>
            <option data-time-limit="step=3e5&limit=48">Last 4 Hours</option>
            <option data-time-limit="step=36e5&limit=24">Last 24 Hours</option>
        </select>
    </li>
</ul>

<h3 id="metric-title">&nbsp;</h3>
<ul id="metric-drilldown-list"></ul>

<div id="graphs"></div>

@section Stylesheet
{
    <style>
        h1 { margin: 0; }

        iframe {width: 100%;height: 250px; }

        .graph-container {margin-left: 0;background-color: transparent;padding: 0;height: auto; width: auto; }

        .graph-container.half {width: 50%;float: left; }

        .graph-title {font-size: 1.2em;min-height: 23px;font-weight: bold; }
    </style>
}

@section Javascript
{
    <script src="~/assets/js/page-capture.js"></script>
    <script src="~/assets/js/lib/jquery-2.0.0.min.js"></script>
    <script src="~/assets/js/lib/TLRGRP.core.js"></script>
    <script src="~/assets/js/lib/TLRGRP.BADGER.utilities.js"></script>
    <script src="~/assets/js/status-charts/TLRGRP.dashboards.Builder.js"></script>
    <script src="~/assets/js/status/TLRGRP.BADGER.DashboardCollection.js"></script>
    <script src="~/assets/js/status/TLRGRP.BADGER.DashboardList.js"></script>
    <script src="~/assets/js/status/TLRGRP.BADGER.Dashboard.WebHosts.js"></script>
    <script src="~/assets/js/status/TLRGRP.BADGER.Dashboard.Overview.js"></script>
    <script src="~/assets/js/status/TLRGRP.BADGER.TimeSelect.js"></script>
    <script src="~/assets/js/status/TLRGRP.BADGER.StopStart.js"></script>
	
    <script type="text/javascript">
        (function() {
            var dashboardCollection = new TLRGRP.BADGER.DashboardCollection([
                new TLRGRP.BADGER.Dashboard.Overview(),
                new TLRGRP.BADGER.Dashboard.WebHosts()
            ], 'Overview');
            var selectedView;
            var currentStep;
            var currentLimit;

            var MetricsRequest = function() {
                var getParameterByName = TLRGRP.BADGER.Utilities.getParameterByName;
                var dashboard = getParameterByName('metric') || 'Overview';
                var currentSubmetric = getParameterByName('subMetric');

                return {
                    dashboard: function() {
                        return dashboard;
                    },
                    subMetric: function() {
                        return currentSubmetric;
                    }
                };
            };

            var request = new MetricsRequest();
            var currentDashboard = request.dashboard();
            var allViews = dashboardCollection.allViews();
            var myDashboard = dashboardCollection.getDashboardByView(currentDashboard);
            var currentSubmetric = myDashboard.getView(currentDashboard, request.subMetric());

            if (allViews[currentDashboard]) {
                if (allViews[currentDashboard].subMetrics && allViews[currentDashboard].subMetrics[currentSubmetric]) {
                    selectedView = allViews[currentDashboard].subMetrics[currentSubmetric];
                } else {
                    selectedView = 'Overview';
                }
            }
            
            var defaultStep = (selectedView && selectedView.defaults && selectedView.defaults.step ? selectedView.defaults.step : '6e4');
            var defaultLimit = (selectedView && selectedView.defaults && selectedView.defaults.limit ? selectedView.defaults.limit : 60);

            currentStep = TLRGRP.BADGER.Utilities.getParameterByName('step') || defaultStep;
            currentLimit = TLRGRP.BADGER.Utilities.getParameterByName('limit') || defaultLimit;

            var currentTimitSelectDataString = 'step=' + currentStep + '&limit=' + currentLimit;
            var graphs = myDashboard.getGraphs(selectedView, currentTimitSelectDataString);

            (function () {
                new TLRGRP.BADGER.DashboardList(request, currentSubmetric, allViews);
                
                new TLRGRP.BADGER.TimeSelect($('#query-time-select'), {
                    currentMetric: currentDashboard,
                    currentTimeString: currentTimitSelectDataString
                });
                new TLRGRP.BADGER.StopStart($('#stop-start'));
            })();

            new TLRGRP.dashboards.Builder($('#graphs'), graphs);
        })();
    </script>
}